char *updateName = (char *)malloc((strlen(exe_path) + 12) * sizeof(char));
	strcpy(updateName, exe_path);
	strcat(updateName, "updates.bat");
	FILE* fp = NULL;
	fp = fopen(updateName,"a+");
	if(fp != NULL)
	{
		fprintf(fp, "%s\n", "@ECHO OFF");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "TIMEOUT /t 1 /nobreak > NUL");
		fprintf(fp, "%s\n", "MKDIR Hello");
	}
	fclose(fp);
	
	PROCESS_INFORMATION pInfo;
	ZeroMemory(&pInfo, sizeof(PROCESS_INFORMATION));
	// Specify the pipe handle and make sure the window is hidden.
	STARTUPINFO startInfo;
	ZeroMemory(&startInfo, sizeof(STARTUPINFO));
	startInfo.cb = sizeof(STARTUPINFO);
	startInfo.dwFlags |= STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW;
	startInfo.wShowWindow = SW_HIDE;
	BOOL bRValue;

    bRValue = CreateProcess(
        NULL, //lpApplicationName
		updateName, //lpCommandLine
        NULL, //lpProcessAttributes
        NULL, //lpThreadAttributes
        TRUE, //bInheritHandles
        0, //dwCreationFlags
        NULL, //lpEnvironment
		exe_path, //lpCurrentDirectory
        &startInfo, //lpStartupInfo
        &pInfo //lpProcessInformation
        );
    if (bRValue){
        WriteToLog("Process created.\n");
    }